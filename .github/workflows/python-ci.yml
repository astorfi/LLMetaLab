name: Python CI/CD for All Projects

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  detect-projects:
    name: Detect Projects
    runs-on: ubuntu-latest
    outputs:
      project_paths: ${{ steps.set-project-paths.outputs.project_paths }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Find project folders
        id: set-project-paths
        run: |
          project_paths=$(find . -type f -name requirements.txt -exec dirname {} \; | jq -R . | jq -s .)
          echo "project_paths=$project_paths" >> $GITHUB_ENV
          echo "::set-output name=project_paths::$project_paths"

  build-and-test:
    needs: detect-projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project-path: ${{ fromJson(needs.detect-projects.outputs.project_paths) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker container
        run: |
          cd ${{ matrix.project-path }}
          docker build -t my_project_image_${{ matrix.project-path }} .

      - name: Run Docker container
        run: |
          cd ${{ matrix.project-path }}
          docker run my_project_image_${{ matrix.project-path }}
